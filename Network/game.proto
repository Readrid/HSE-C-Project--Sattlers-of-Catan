syntax = "proto3";

package game;

service Network {
    rpc StartNewGame(NumberOfPlayers) returns (OrderInfo) {}

    rpc JoinGame(GameId) returns (OrderInfo) {}

    rpc SendEvent(Event) returns (Void) {}

    rpc GetEvent(Player) returns (Event) {}

    rpc HasEvent(Player) returns (Bool) {}
}

message Void {}

message Bool {
    bool hasEvent = 1;
}

message NumberOfPlayers {
    int32 numberOfPlayers = 1;
}

message GameId {
    int32 gameId = 1;
}

message OrderInfo {
    int32 id = 1;
    int32 numberOfPlayers = 2;
    int32 gameId = 3;
    uint32 seed = 4;
}


enum EventType {
    CARD = 0;
    DICE = 1;
    MARKET = 2;
    BUILD = 3;
    ENDTURN = 4;
    NEXTPHASE = 5;
    ENDGAME = 6;
    //TRADE = 7;
}


message Player {
    int32 playerId = 1;
    int32 gameId = 2;
}


message Event {
    EventType type = 1;
    int32 playerId = 2;
    int32 gameId = 3;
    
    oneof EventInfo {
        Card cardInfo = 4;
        Dice diceInfo = 5;
        Market marketInfo = 6;
        Build buildInfo = 7;
    }
}

message Card {
    int32 cardType = 1;
    int32 extraData = 2;
}

message Dice {
    int32 number1 = 1;
    int32 number2 = 2;
    int32 hexNumber = 3;
}

message Market {
    int32 requiredResource = 1;
    int32 ownedResource = 2;
}

message Build {
    int32 buildingType = 1;
    int32 x = 2;
    int32 y = 3;
}


